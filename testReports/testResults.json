{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-06T14:34:09.052Z",
    "end": "2021-12-06T14:34:37.566Z",
    "duration": 28514,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f7aaf74d-647e-4940-94cf-9652883c604c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8137222f-f6b1-48c6-9470-e8fe7e98ccc3",
          "title": "add another todo tests",
          "fullFile": "/Users/tsukuyomi/Projects/seleniumDemo/test/parameterized.test.js",
          "file": "/test/parameterized.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds another todo for browser Chrome, 93.0, Windows 10",
              "fullTitle": "add another todo tests successfully adds another todo for browser Chrome, 93.0, Windows 10",
              "timedOut": null,
              "duration": 6878,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// ltCapabilities.capabilities.name = this.currentTest.title;\n// ltCapabilities.capabilities.platformName = os;\n// ltCapabilities.capabilities.browserName = browser;\n// ltCapabilities.capabilities.browserVersion = bVersion;\nconst capabilities = {\n  ...ltCapabilities.capabilities,\n  name: this.title,\n  platformName: os,\n  browserName: browser,\n  browserVersion: bVersion,\n};\ndriver = await new Builder().usingServer(gridUrl).withCapabilities(capabilities).build();\nawait driver.get(todoEndpoint);\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('drink lots of coffee', Key.RETURN);\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(value => {\n    return value;\n  });\ntodoText.should.equal('drink lots of coffee');\nawait driver.quit();",
              "err": {},
              "uuid": "31295985-b576-4df4-a6cc-5d6cf8199427",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "successfully adds another todo for browser Firefox, 91.0, Windows 10",
              "fullTitle": "add another todo tests successfully adds another todo for browser Firefox, 91.0, Windows 10",
              "timedOut": null,
              "duration": 9489,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// ltCapabilities.capabilities.name = this.currentTest.title;\n// ltCapabilities.capabilities.platformName = os;\n// ltCapabilities.capabilities.browserName = browser;\n// ltCapabilities.capabilities.browserVersion = bVersion;\nconst capabilities = {\n  ...ltCapabilities.capabilities,\n  name: this.title,\n  platformName: os,\n  browserName: browser,\n  browserVersion: bVersion,\n};\ndriver = await new Builder().usingServer(gridUrl).withCapabilities(capabilities).build();\nawait driver.get(todoEndpoint);\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('drink lots of coffee', Key.RETURN);\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(value => {\n    return value;\n  });\ntodoText.should.equal('drink lots of coffee');\nawait driver.quit();",
              "err": {},
              "uuid": "b04587ed-4fa6-4847-9a29-00ea7aac4caf",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "successfully adds another todo for browser Firefox, 90.0, Windows 10",
              "fullTitle": "add another todo tests successfully adds another todo for browser Firefox, 90.0, Windows 10",
              "timedOut": null,
              "duration": 11476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// ltCapabilities.capabilities.name = this.currentTest.title;\n// ltCapabilities.capabilities.platformName = os;\n// ltCapabilities.capabilities.browserName = browser;\n// ltCapabilities.capabilities.browserVersion = bVersion;\nconst capabilities = {\n  ...ltCapabilities.capabilities,\n  name: this.title,\n  platformName: os,\n  browserName: browser,\n  browserVersion: bVersion,\n};\ndriver = await new Builder().usingServer(gridUrl).withCapabilities(capabilities).build();\nawait driver.get(todoEndpoint);\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('drink lots of coffee', Key.RETURN);\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(value => {\n    return value;\n  });\ntodoText.should.equal('drink lots of coffee');\nawait driver.quit();",
              "err": {},
              "uuid": "b5323586-4668-4426-824e-dd8caf486884",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31295985-b576-4df4-a6cc-5d6cf8199427",
            "b04587ed-4fa6-4847-9a29-00ea7aac4caf",
            "b5323586-4668-4426-824e-dd8caf486884"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27843,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "/Users/tsukuyomi/Projects/seleniumDemo/testReports",
        "reportFilename": "testResults"
      },
      "version": "6.0.1"
    }
  }
}